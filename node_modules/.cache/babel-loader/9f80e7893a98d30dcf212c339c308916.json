{"ast":null,"code":"import _slicedToArray from \"/Users/mlatt/Desktop/Folders/javaScript:HTML:React:NodeJS/React/ToDoList:Data-base:React/reminder-with-data-base/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mlatt/Desktop/Folders/javaScript:HTML:React:NodeJS/React/ToDoList:Data-base:React/reminder-with-data-base/src/contexts/BookContext.js\";\nimport React, { createContext, useReducer, useEffect } from 'react'; // import uuid from 'uuid/v1'\n\nimport { BookReducer } from '../Reducers/BookReducer';\nexport const BookContext = createContext();\n\nconst BookContextProvider = props => {\n  // books = original data and setBooks = to change the state or data\n  const _useReducer = useReducer(BookReducer, [], () => {\n    const localData = localStorage.getItem('books');\n    return localData ? JSON.parse(localData) : [];\n  }),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        books = _useReducer2[0],\n        dispatch = _useReducer2[1]; // store the data in local storage\n\n\n  useEffect(() => {\n    localStorage.setItem('books', JSON.stringify(books));\n  }, [books]); // const addBook = (title, date) => {\n  //     setBooks([...books, {title: title, date: date, id: uuid()}]);\n  // };\n  // const removeBook = (id) => {\n  //     setBooks(books.filter(book => book.id !== id))\n  // }\n\n  return (// {{books, addBook, removeBook}}\n    React.createElement(BookContext.Provider, {\n      value: {\n        books,\n        dispatch\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, props.children)\n  );\n};\n\nexport default BookContextProvider;","map":{"version":3,"sources":["/Users/mlatt/Desktop/Folders/javaScript:HTML:React:NodeJS/React/ToDoList:Data-base:React/reminder-with-data-base/src/contexts/BookContext.js"],"names":["React","createContext","useReducer","useEffect","BookReducer","BookContext","BookContextProvider","props","localData","localStorage","getItem","JSON","parse","books","dispatch","setItem","stringify","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,SAA3C,QAA4D,OAA5D,C,CACA;;AACA,SAASC,WAAT,QAA4B,yBAA5B;AAEA,OAAO,MAAMC,WAAW,GAAGJ,aAAa,EAAjC;;AAEP,MAAMK,mBAAmB,GAAIC,KAAD,IAAW;AACnC;AADmC,sBAETL,UAAU,CAACE,WAAD,EAAc,EAAd,EAAkB,MAAM;AACxD,UAAMI,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAlB;AACA,WAAOF,SAAS,GAAGG,IAAI,CAACC,KAAL,CAAWJ,SAAX,CAAH,GAA2B,EAA3C;AAGP,GALuC,CAFD;AAAA;AAAA,QAE5BK,KAF4B;AAAA,QAErBC,QAFqB,oBASnC;;;AACAX,EAAAA,SAAS,CAAC,MAAK;AACZM,IAAAA,YAAY,CAACM,OAAb,CAAqB,OAArB,EAA8BJ,IAAI,CAACK,SAAL,CAAeH,KAAf,CAA9B;AACF,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT,CAVmC,CAenC;AACA;AACA;AAEA;AACA;AAEA;;AAEA,SAAkC;AAC9B,wBAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAI;AAACA,QAAAA,KAAD;AAAQC,QAAAA;AAAR,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKP,KAAK,CAACU,QADX;AADJ;AAKH,CA7BD;;AA+BA,eAAeX,mBAAf","sourcesContent":["import React, { createContext, useReducer, useEffect } from 'react';\n// import uuid from 'uuid/v1'\nimport { BookReducer } from '../Reducers/BookReducer';\n\nexport const BookContext = createContext();\n\nconst BookContextProvider = (props) => {\n    // books = original data and setBooks = to change the state or data\n    const [books, dispatch] = useReducer(BookReducer ,[], () => {\n        const localData = localStorage.getItem('books');\n        return localData ? JSON.parse(localData) : [];\n    \n    \n});\n\n    // store the data in local storage\n    useEffect(() =>{\n       localStorage.setItem('books', JSON.stringify(books))\n    }, [books]);\n   \n\n    // const addBook = (title, date) => {\n    //     setBooks([...books, {title: title, date: date, id: uuid()}]);\n    // };\n\n    // const removeBook = (id) => {\n    //     setBooks(books.filter(book => book.id !== id))\n       \n    // }\n\n    return (                          // {{books, addBook, removeBook}}\n        <BookContext.Provider value = {{books, dispatch}}>\n            {props.children}\n        </BookContext.Provider>\n     );\n}\n \nexport default BookContextProvider;"]},"metadata":{},"sourceType":"module"}