{"ast":null,"code":"import uuid from 'uuid/v4';\nexport const ListReducer = (state, action) => {\n  var str = '';\n\n  const lineThrough = () => {\n    if (lists.id == action.id) {\n      str = \"line through\";\n    }\n\n    return str;\n  };\n\n  switch (action.type) {\n    case 'Add_List':\n      return [...state, {\n        title: action.list.title,\n        date: action.list.date,\n        dateLeft: action.list.dateLeft,\n        id: uuid()\n      }];\n\n    case 'Remove_List':\n      return state.filter(list => list.id !== action.id);\n    //state.filter(list => list.id !== action.id)\n\n    case 'Text_line':\n      return lineThrough;\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/mlatt/Desktop/Folders/javaScript:HTML:React:NodeJS/React/ToDoList:Data-base:React/reminder-with-data-base/src/Reducers/ListReducer.js"],"names":["uuid","ListReducer","state","action","str","lineThrough","lists","id","type","title","list","date","dateLeft","filter"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,SAAjB;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC1C,MAAIC,GAAG,GAAG,EAAV;;AACA,QAAMC,WAAW,GAAG,MAAM;AACtB,QAAGC,KAAK,CAACC,EAAN,IAAYJ,MAAM,CAACI,EAAtB,EAA0B;AACtBH,MAAAA,GAAG,GAAG,cAAN;AACH;;AACD,WAAOA,GAAP;AACH,GALD;;AAMA,UAAOD,MAAM,CAACK,IAAd;AACI,SAAK,UAAL;AACI,aAAQ,CAAC,GAAGN,KAAJ,EAAW;AAACO,QAAAA,KAAK,EAAEN,MAAM,CAACO,IAAP,CAAYD,KAApB;AAA2BE,QAAAA,IAAI,EAAER,MAAM,CAACO,IAAP,CAAYC,IAA7C;AAAkDC,QAAAA,QAAQ,EAAET,MAAM,CAACO,IAAP,CAAYE,QAAxE;AAAkFL,QAAAA,EAAE,EAAEP,IAAI;AAA1F,OAAX,CAAR;;AACJ,SAAK,aAAL;AACI,aAAQE,KAAK,CAACW,MAAN,CAAaH,IAAI,IAAIA,IAAI,CAACH,EAAL,KAAYJ,MAAM,CAACI,EAAxC,CAAR;AAAqD;;AACzD,SAAK,WAAL;AACI,aAAOF,WAAP;;AACJ;AACI,aAAOH,KAAP;AARR;AAUH,CAlBM","sourcesContent":["import uuid from 'uuid/v4'\n\nexport const ListReducer = (state, action) => {\n    var str = '';\n    const lineThrough = () => {\n        if(lists.id == action.id ){\n            str = \"line through\"\n        }\n        return str;\n    }\n    switch(action.type){\n        case 'Add_List':\n            return ([...state, {title: action.list.title, date: action.list.date,dateLeft: action.list.dateLeft ,id: uuid()}]);\n        case 'Remove_List':\n            return (state.filter(list => list.id !== action.id)) //state.filter(list => list.id !== action.id)\n        case 'Text_line':\n            return(lineThrough);\n        default:\n            return state\n    }\n}\n"]},"metadata":{},"sourceType":"module"}