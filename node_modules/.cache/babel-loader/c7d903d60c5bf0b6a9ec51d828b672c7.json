{"ast":null,"code":"import _slicedToArray from \"/Users/mlatt/Desktop/Folders/javaScript:HTML:React:NodeJS/React/ToDoList:Data-base:React/reminder-with-data-base/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mlatt/Desktop/Folders/javaScript:HTML:React:NodeJS/React/ToDoList:Data-base:React/reminder-with-data-base/src/contexts/ListContext.js\";\nimport React, { createContext, useReducer, useEffect } from 'react'; // import uuid from 'uuid/v1'\n\nimport { ListReducer } from '../Reducers/ListReducer';\nexport const ListContext = createContext();\n\nconst ListContextProvider = props => {\n  // lists = original data and setBooks = to change the state or data\n  const _useReducer = useReducer(ListReducer, [{\n    id: 112,\n    title: \"Dummy\",\n    data: \"10/10/2021\"\n  }], () => {\n    const localData = localStorage.getItem('lists');\n    return localData ? JSON.parse(localData) : [];\n  }),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        lists = _useReducer2[0],\n        dispatch = _useReducer2[1]; // store the data in local storage\n\n\n  useEffect(() => {\n    localStorage.setItem('lists', JSON.stringify(lists));\n  }, [lists]); // const addBook = (title, date) => {\n  //     setBooks([...lists, {title: title, date: date, id: uuid()}]);\n  // };\n  // const removeBook = (id) => {\n  //     setBooks(lists.filter(book => book.id !== id))\n  // }\n\n  return (// {{lists, addBook, removeBook}}\n    React.createElement(ListContext.Provider, {\n      value: {\n        lists,\n        dispatch\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, props.children)\n  );\n};\n\nexport default ListContextProvider;","map":{"version":3,"sources":["/Users/mlatt/Desktop/Folders/javaScript:HTML:React:NodeJS/React/ToDoList:Data-base:React/reminder-with-data-base/src/contexts/ListContext.js"],"names":["React","createContext","useReducer","useEffect","ListReducer","ListContext","ListContextProvider","props","id","title","data","localData","localStorage","getItem","JSON","parse","lists","dispatch","setItem","stringify","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,SAA3C,QAA4D,OAA5D,C,CACA;;AACA,SAASC,WAAT,QAA4B,yBAA5B;AAEA,OAAO,MAAMC,WAAW,GAAGJ,aAAa,EAAjC;;AAEP,MAAMK,mBAAmB,GAAIC,KAAD,IAAW;AAEnC;AAFmC,sBAGTL,UAAU,CAACE,WAAD,EAAc,CAC9C;AAACI,IAAAA,EAAE,EAAE,GAAL;AAAUC,IAAAA,KAAK,EAAE,OAAjB;AAA0BC,IAAAA,IAAI,EAAE;AAAhC,GAD8C,CAAd,EAGhC,MAAM;AACN,UAAMC,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAlB;AACA,WAAOF,SAAS,GAAGG,IAAI,CAACC,KAAL,CAAWJ,SAAX,CAAH,GAA2B,EAA3C;AACH,GANmC,CAHD;AAAA;AAAA,QAG5BK,KAH4B;AAAA,QAGrBC,QAHqB,oBAWnC;;;AACAd,EAAAA,SAAS,CAAC,MAAK;AACZS,IAAAA,YAAY,CAACM,OAAb,CAAqB,OAArB,EAA8BJ,IAAI,CAACK,SAAL,CAAeH,KAAf,CAA9B;AACF,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT,CAZmC,CAiBnC;AACA;AACA;AAEA;AACA;AAEA;;AAEA,SAAkC;AAC9B,wBAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAI;AAACA,QAAAA,KAAD;AAAQC,QAAAA;AAAR,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKV,KAAK,CAACa,QADX;AADJ;AAKH,CA/BD;;AAiCA,eAAed,mBAAf","sourcesContent":["import React, { createContext, useReducer, useEffect } from 'react';\n// import uuid from 'uuid/v1'\nimport { ListReducer } from '../Reducers/ListReducer';\n\nexport const ListContext = createContext();\n\nconst ListContextProvider = (props) => {\n    \n    // lists = original data and setBooks = to change the state or data\n    const [lists, dispatch] = useReducer(ListReducer ,[\n        {id: 112, title: \"Dummy\", data: \"10/10/2021\"}\n    ], \n        () => {\n        const localData = localStorage.getItem('lists');\n        return localData ? JSON.parse(localData) : []; \n    });\n\n    // store the data in local storage\n    useEffect(() =>{\n       localStorage.setItem('lists', JSON.stringify(lists))\n    }, [lists]);\n   \n\n    // const addBook = (title, date) => {\n    //     setBooks([...lists, {title: title, date: date, id: uuid()}]);\n    // };\n\n    // const removeBook = (id) => {\n    //     setBooks(lists.filter(book => book.id !== id))\n       \n    // }\n\n    return (                          // {{lists, addBook, removeBook}}\n        <ListContext.Provider value = {{lists, dispatch}}>\n            {props.children}\n        </ListContext.Provider>\n     );\n}\n \nexport default ListContextProvider;"]},"metadata":{},"sourceType":"module"}