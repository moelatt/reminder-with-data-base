{"ast":null,"code":"import _defineProperty from \"/Users/mlatt/Desktop/Folders/javaScript:HTML:React:NodeJS/React/ToDoList:Data-base:React/reminder-with-data-base/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/mlatt/Desktop/Folders/javaScript:HTML:React:NodeJS/React/ToDoList:Data-base:React/reminder-with-data-base/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mlatt/Desktop/Folders/javaScript:HTML:React:NodeJS/React/ToDoList:Data-base:React/reminder-with-data-base/src/contexts/ThemeContext.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// import React, { Component, createContext } from 'react';\n// import { ListContext } from './ListContext';\n// export const ThemeContext = createContext();\n// class ThemeContextProvider extends Component {\n//     static contextType = ListContext;\n//     state = { \n//         completed: false,\n//         line: {\n//             textDecoration: \"line-through\"\n//         },\n//         noLine: {\n//             textDecoration: \"none\"\n//         }\n//      }\n//      passTheme = (id) => {\n//         this.setState({ \n//             completed: !this.state.completed\n//         })    \n//     }    \n//     render() {\n//         return ( \n//             <ThemeContext.Provider  value= {{...this.state, passFuncTheme: this.passTheme}}>\n//                 {this.props.children}\n//             </ThemeContext.Provider>\n//          );\n//     }\n// }\n// export default ThemeContextProvider;\nimport React, { useState, createContext, useContext } from 'react';\nimport { ListContext } from './ListContext';\nexport const ThemeContext = createContext();\n\nconst ThemeContextProvider = props => {\n  const _useState = useState({\n    completed: false\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const _useContext = useContext(ListContext),\n        dispatch = _useContext.dispatch,\n        lists = _useContext.lists;\n\n  const theme = state.completed ? \"line-through\" : \"none\";\n\n  const completeFunc = passID => {\n    // setState({completed: !completed})\n    const completed = lists.map(list => {\n      if (list.id === passID) {\n        list.completedBool = !list.completedBool;\n      }\n\n      return list.completedBool;\n    });\n    dispatch({\n      list: {\n        completed\n      }\n    });\n    console.log(completed); // return completed;\n  };\n\n  return React.createElement(ThemeContext.Provider, {\n    value: _objectSpread({}, state, {\n      passFuncTheme: completeFunc\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default ThemeContextProvider;","map":{"version":3,"sources":["/Users/mlatt/Desktop/Folders/javaScript:HTML:React:NodeJS/React/ToDoList:Data-base:React/reminder-with-data-base/src/contexts/ThemeContext.js"],"names":["React","useState","createContext","useContext","ListContext","ThemeContext","ThemeContextProvider","props","completed","state","setState","dispatch","lists","theme","completeFunc","passID","map","list","id","completedBool","console","log","passFuncTheme","children"],"mappings":";;;;;;;;AAAA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,EAAyCC,UAAzC,QAA2D,OAA3D;AACA,SAAUC,WAAV,QAA6B,eAA7B;AAEA,OAAO,MAAMC,YAAY,GAAGH,aAAa,EAAlC;;AACP,MAAMI,oBAAoB,GAAIC,KAAD,IAAW;AAAA,oBACXN,QAAQ,CAAC;AAC9BO,IAAAA,SAAS,EAAE;AADmB,GAAD,CADG;AAAA;AAAA,QAC9BC,KAD8B;AAAA,QACvBC,QADuB;;AAAA,sBAIVP,UAAU,CAACC,WAAD,CAJA;AAAA,QAI7BO,QAJ6B,eAI7BA,QAJ6B;AAAA,QAInBC,KAJmB,eAInBA,KAJmB;;AAKpC,QAAMC,KAAK,GAAGJ,KAAK,CAACD,SAAN,GAAkB,cAAlB,GAAmC,MAAjD;;AAEA,QAAMM,YAAY,GAAIC,MAAD,IAAY;AAC7B;AACA,UAAMP,SAAS,GAAGI,KAAK,CAACI,GAAN,CAAUC,IAAI,IAAI;AAChC,UAAGA,IAAI,CAACC,EAAL,KAAYH,MAAf,EAAsB;AAClBE,QAAAA,IAAI,CAACE,aAAL,GAAqB,CAACF,IAAI,CAACE,aAA3B;AACH;;AACG,aAAQF,IAAI,CAACE,aAAb;AACH,KALa,CAAlB;AAMIR,IAAAA,QAAQ,CAAC;AAACM,MAAAA,IAAI,EAAE;AAAET,QAAAA;AAAF;AAAP,KAAD,CAAR;AAEJY,IAAAA,OAAO,CAACC,GAAR,CAAYb,SAAZ,EAV6B,CAW7B;AACH,GAZD;;AAcA,SACI,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,oBAAQC,KAAR;AAAea,MAAAA,aAAa,EAAER;AAA9B,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,KAAK,CAACgB,QADX,CADJ;AAKH,CA1BD;;AA4BA,eAAejB,oBAAf","sourcesContent":["// import React, { Component, createContext } from 'react';\n// import { ListContext } from './ListContext';\n\n// export const ThemeContext = createContext();\n\n// class ThemeContextProvider extends Component {\n//     static contextType = ListContext;\n    \n//     state = { \n//         completed: false,\n//         line: {\n//             textDecoration: \"line-through\"\n//         },\n//         noLine: {\n//             textDecoration: \"none\"\n//         }\n//      }\n//      passTheme = (id) => {\n//         this.setState({ \n//             completed: !this.state.completed\n//         })    \n//     }    \n         \n//     render() {\n//         return ( \n//             <ThemeContext.Provider  value= {{...this.state, passFuncTheme: this.passTheme}}>\n//                 {this.props.children}\n//             </ThemeContext.Provider>\n//          );\n//     }\n// }\n// export default ThemeContextProvider;\n\nimport React, { useState, createContext, useContext } from 'react';\nimport  { ListContext } from './ListContext';\n\nexport const ThemeContext = createContext(); \nconst ThemeContextProvider = (props) => {\n    const[state, setState] = useState({\n        completed: false\n    })\n    const {dispatch, lists} = useContext(ListContext)\n    const theme = state.completed ? \"line-through\" : \"none\";\n\n    const completeFunc = (passID) => {\n        // setState({completed: !completed})\n        const completed = lists.map(list => {\n            if(list.id === passID){\n                list.completedBool = !list.completedBool\n            }\n                return (list.completedBool)\n            })\n            dispatch({list: { completed}})\n\n        console.log(completed)\n        // return completed;\n    }\n\n    return ( \n        <ThemeContext.Provider value = {{...state, passFuncTheme: completeFunc }}>\n            {props.children}\n        </ThemeContext.Provider>\n     );\n}\n \nexport default ThemeContextProvider;"]},"metadata":{},"sourceType":"module"}