{"ast":null,"code":"import _slicedToArray from \"/Users/mlatt/Desktop/Folders/javaScript:HTML:React:NodeJS/React/ToDoList:Data-base:React/reminder-with-data-base/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mlatt/Desktop/Folders/javaScript:HTML:React:NodeJS/React/ToDoList:Data-base:React/reminder-with-data-base/src/components/AddListForm.js\";\nimport React, { useContext, useState } from 'react';\nimport { ListContext } from '../contexts/ListContext';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst AddListForm = () => {\n  const _useContext = useContext(ListContext),\n        dispatch = _useContext.dispatch;\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        title = _useState2[0],\n        setTitle = _useState2[1]; // const[dateLeft] = useState('')\n\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        date = _useState4[0],\n        setDate = _useState4[1];\n\n  const todayDate = new Date();\n\n  const _useState5 = useState(new Date()),\n        _useState6 = _slicedToArray(_useState5, 2),\n        startDate = _useState6[0],\n        setStartDate = _useState6[1];\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    var mdy = date.split('/');\n    var inputDate = new Date(mdy[2], mdy[0] - 1, mdy[1]);\n    var dateLeft = Math.round((inputDate - todayDate) / (1000 * 60 * 60 * 24));\n    var completed = false;\n    console.log(dateLeft + \" days left\");\n    dispatch({\n      type: 'Add_List',\n      list: {\n        title,\n        date,\n        dateLeft,\n        completed\n      }\n    }); // addBook(title, date, dateLeft, completed)\n\n    setTitle('');\n    setDate('');\n    setStartDate('');\n  };\n\n  const handleChange = date => {\n    setStartDate(date);\n  };\n\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"what is your plan for today?\",\n    value: title,\n    onChange: e => setTitle(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(DatePicker, {\n    selected: startDate,\n    dateFormat: \"MM/dd/yyyy\",\n    onChange: handleChange,\n    value: setStartDate,\n    onChangeRaw: e => setDate(e.target.value),\n    placeholderText: \"Due Date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Add List\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }))));\n};\n\nexport default AddListForm;","map":{"version":3,"sources":["/Users/mlatt/Desktop/Folders/javaScript:HTML:React:NodeJS/React/ToDoList:Data-base:React/reminder-with-data-base/src/components/AddListForm.js"],"names":["React","useContext","useState","ListContext","DatePicker","AddListForm","dispatch","title","setTitle","date","setDate","todayDate","Date","startDate","setStartDate","handleSubmit","e","preventDefault","mdy","split","inputDate","dateLeft","Math","round","completed","console","log","type","list","handleChange","target","value"],"mappings":"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","sourcesContent":["import React, {useContext, useState } from 'react';\nimport { ListContext } from '../contexts/ListContext';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n\nconst AddListForm = () => {\n    const{dispatch} = useContext(ListContext);\n    const[title, setTitle] = useState(\"\");\n    // const[dateLeft] = useState('')\n    const [date, setDate] = useState('');\n\n    const todayDate = new Date();\n\n    const [startDate, setStartDate] = useState(new Date());\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        var mdy = date.split('/')\n        var inputDate = new Date(mdy[2], mdy[0] - 1, mdy[1]);\n        var  dateLeft = Math.round((inputDate - todayDate)/(1000*60*60*24));\n        var completed = false;\n        console.log( dateLeft + \" days left\");\n        dispatch({type: 'Add_List', list: {title, date, dateLeft, completed}})\n        // addBook(title, date, dateLeft, completed)\n        setTitle('');\n        setDate('');\n        setStartDate('');\n    }\n    const handleChange = (date) => {\n         setStartDate(date)\n    }\n    return ( \n        <form onSubmit = {handleSubmit} >\n            <input \n                type ='text' \n                placeholder= 'what is your plan for today?' \n                value = {title}\n                onChange = {(e) => setTitle(e.target.value)}>\n            </input>\n            {/* <input \n                type ='text' \n                placeholder= 'Due Date' \n                value = {date}\n                onChange = {(e) => setDate(e.target.value)}>\n            </input> */}\n            <div>\n                <DatePicker selected={startDate} \n                            dateFormat=\"MM/dd/yyyy\"\n                            onChange={handleChange } \n                            value = {setStartDate}\n                            \n                            onChangeRaw = {(e) => setDate(e.target.value)} \n                            placeholderText ='Due Date'\n                             \n                            />\n                    <span><input type = 'submit' value = 'Add List'/></span>  \n\n            </div>\n        </form>\n        \n     );\n}\n \nexport default AddListForm;"]},"metadata":{},"sourceType":"module"}