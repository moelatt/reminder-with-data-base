{"ast":null,"code":"import uuid from 'uuid/v4';\nexport const ListReducer = (state, action) => {\n  const lineThrough = () => {\n    const line = state.filter(list => list.id === action.id);\n\n    if (line) {\n      console.log(\"linethrough\");\n    }\n\n    console.log(\"linethrough\");\n  };\n\n  switch (action.type) {\n    case 'Add_List':\n      return [...state, {\n        title: action.list.title,\n        date: action.list.date,\n        dateLeft: action.list.dateLeft,\n        id: uuid()\n      }];\n\n    case 'Remove_List':\n      return state.filter(list => list.id !== action.id);\n    //state.filter(list => list.id !== action.id)\n\n    case 'Text_line':\n      return lineThrough;\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/mlatt/Desktop/Folders/javaScript:HTML:React:NodeJS/React/ToDoList:Data-base:React/reminder-with-data-base/src/Reducers/ListReducer.js"],"names":["uuid","ListReducer","state","action","lineThrough","line","filter","list","id","console","log","type","title","date","dateLeft"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,SAAjB;AAIA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC1C,QAAMC,WAAW,GAAG,MAAM;AACtB,UAAMC,IAAI,GAAGH,KAAK,CAACI,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACK,EAAxC,CAAb;;AACA,QAAGH,IAAH,EAAQ;AACJI,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACH;;AACDD,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AAEH,GAPD;;AAQA,UAAOP,MAAM,CAACQ,IAAd;AACI,SAAK,UAAL;AACI,aAAQ,CAAC,GAAGT,KAAJ,EAAW;AAACU,QAAAA,KAAK,EAAET,MAAM,CAACI,IAAP,CAAYK,KAApB;AAA2BC,QAAAA,IAAI,EAAEV,MAAM,CAACI,IAAP,CAAYM,IAA7C;AAAkDC,QAAAA,QAAQ,EAAEX,MAAM,CAACI,IAAP,CAAYO,QAAxE;AAAkFN,QAAAA,EAAE,EAAER,IAAI;AAA1F,OAAX,CAAR;;AACJ,SAAK,aAAL;AACI,aAAQE,KAAK,CAACI,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACK,EAAxC,CAAR;AAAqD;;AACzD,SAAK,WAAL;AACI,aAAQJ,WAAR;;AACJ;AACI,aAAOF,KAAP;AARR;AAUH,CAnBM","sourcesContent":["import uuid from 'uuid/v4'\n\n\n\nexport const ListReducer = (state, action) => {\n    const lineThrough = () => {\n        const line = state.filter(list => list.id === action.id)\n        if(line){\n            console.log(\"linethrough\");\n        }\n        console.log(\"linethrough\");\n\n    }\n    switch(action.type){\n        case 'Add_List':\n            return ([...state, {title: action.list.title, date: action.list.date,dateLeft: action.list.dateLeft ,id: uuid()}]);\n        case 'Remove_List':\n            return (state.filter(list => list.id !== action.id)) //state.filter(list => list.id !== action.id)\n        case 'Text_line':\n            return (lineThrough)\n        default:\n            return state\n    }\n}\n"]},"metadata":{},"sourceType":"module"}