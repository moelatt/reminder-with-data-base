{"ast":null,"code":"// import React, { Component, createContext } from 'react';\n// import { ListContext } from './ListContext';\n// export const ThemeContext = createContext();\n// class ThemeContextProvider extends Component {\n//     static contextType = ListContext;\n//     state = { \n//         completed: false,\n//         line: {\n//             textDecoration: \"line-through\"\n//         },\n//         noLine: {\n//             textDecoration: \"none\"\n//         }\n//      }\n//      passTheme = (id) => {\n//         this.setState({ \n//             completed: !this.state.completed\n//         })    \n//     }    \n//     render() {\n//         return ( \n//             <ThemeContext.Provider  value= {{...this.state, passFuncTheme: this.passTheme}}>\n//                 {this.props.children}\n//             </ThemeContext.Provider>\n//          );\n//     }\n// }\n// export default ThemeContextProvider;","map":{"version":3,"sources":["/Users/mlatt/Desktop/Folders/javaScript:HTML:React:NodeJS/React/ToDoList:Data-base:React/reminder-with-data-base/src/contexts/ThemeContext.js"],"names":[],"mappings":"AAAA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import React, { Component, createContext } from 'react';\n// import { ListContext } from './ListContext';\n\n// export const ThemeContext = createContext();\n\n// class ThemeContextProvider extends Component {\n//     static contextType = ListContext;\n    \n//     state = { \n//         completed: false,\n//         line: {\n//             textDecoration: \"line-through\"\n//         },\n//         noLine: {\n//             textDecoration: \"none\"\n//         }\n//      }\n//      passTheme = (id) => {\n//         this.setState({ \n//             completed: !this.state.completed\n//         })    \n//     }    \n         \n//     render() {\n//         return ( \n//             <ThemeContext.Provider  value= {{...this.state, passFuncTheme: this.passTheme}}>\n//                 {this.props.children}\n//             </ThemeContext.Provider>\n//          );\n//     }\n// }\n// export default ThemeContextProvider;"]},"metadata":{},"sourceType":"module"}