{"ast":null,"code":"import uuid from 'uuid/v4';\nexport const ListReducer = (state, action) => {\n  // const lineThrough = () => {\n  //     const line = state.filter(list => list.id === action.id)\n  //     if(line){\n  //         console.log(\"linethrough\");\n  //     }\n  //     console.log(\"linethrough\");\n  // }\n  switch (action.type) {\n    case 'Add_List':\n      return [...state, {\n        title: action.list.title,\n        date: action.list.date,\n        dateLeft: action.list.dateLeft,\n        id: uuid()\n      }];\n\n    case 'Remove_List':\n      return state.filter(list => list.id !== action.id);\n    //state.filter(list => list.id !== action.id)\n    // case 'Text_line':\n    //     return (lineThrough)\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/mlatt/Desktop/Folders/javaScript:HTML:React:NodeJS/React/ToDoList:Data-base:React/reminder-with-data-base/src/Reducers/ListReducer.js"],"names":["uuid","ListReducer","state","action","type","title","list","date","dateLeft","id","filter"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,SAAjB;AAIA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,UAAL;AACI,aAAQ,CAAC,GAAGF,KAAJ,EAAW;AAACG,QAAAA,KAAK,EAAEF,MAAM,CAACG,IAAP,CAAYD,KAApB;AAA2BE,QAAAA,IAAI,EAAEJ,MAAM,CAACG,IAAP,CAAYC,IAA7C;AAAkDC,QAAAA,QAAQ,EAAEL,MAAM,CAACG,IAAP,CAAYE,QAAxE;AAAkFC,QAAAA,EAAE,EAAET,IAAI;AAA1F,OAAX,CAAR;;AACJ,SAAK,aAAL;AACI,aAAQE,KAAK,CAACQ,MAAN,CAAaJ,IAAI,IAAIA,IAAI,CAACG,EAAL,KAAYN,MAAM,CAACM,EAAxC,CAAR;AAAqD;AACzD;AACA;;AACA;AACI,aAAOP,KAAP;AARR;AAUH,CAnBM","sourcesContent":["import uuid from 'uuid/v4'\n\n\n\nexport const ListReducer = (state, action) => {\n    // const lineThrough = () => {\n    //     const line = state.filter(list => list.id === action.id)\n    //     if(line){\n    //         console.log(\"linethrough\");\n    //     }\n    //     console.log(\"linethrough\");\n\n    // }\n    switch(action.type){\n        case 'Add_List':\n            return ([...state, {title: action.list.title, date: action.list.date,dateLeft: action.list.dateLeft ,id: uuid()}]);\n        case 'Remove_List':\n            return (state.filter(list => list.id !== action.id)) //state.filter(list => list.id !== action.id)\n        // case 'Text_line':\n        //     return (lineThrough)\n        default:\n            return state\n    }\n}\n"]},"metadata":{},"sourceType":"module"}