{"ast":null,"code":"import _slicedToArray from \"/Users/mlatt/Desktop/Folders/javaScript:HTML:React:NodeJS/React/ToDoList:Data-base:React/reminder-with-data-base/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mlatt/Desktop/Folders/javaScript:HTML:React:NodeJS/React/ToDoList:Data-base:React/reminder-with-data-base/src/contexts/BookContext.js\";\nimport React, { createContext, useState, useEffect } from 'react';\nimport uuid from 'uuid/v1';\nexport const BookContext = createContext();\n\nconst BookContextProvider = props => {\n  // books = original data and setBooks = to change the state or data\n  const _useState = useState([], () => {\n    const localData = localStorage.getItem('books');\n    return localData ? JSON.parse(localData) : [];\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        books = _useState2[0],\n        setBooks = _useState2[1]; // store the data in local storage\n\n\n  useEffect(() => {\n    localStorage.setItem('books', JSON.stringify(books));\n  }, [books]);\n\n  const addBook = (title, date) => {\n    setBooks([...books, {\n      title: title,\n      date: date,\n      id: uuid()\n    }]);\n  };\n\n  const removeBook = id => {\n    setBooks(books.filter(book => book.id !== id));\n  };\n\n  return React.createElement(BookContext.Provider, {\n    value: {\n      books,\n      addBook,\n      removeBook\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default BookContextProvider;","map":{"version":3,"sources":["/Users/mlatt/Desktop/Folders/javaScript:HTML:React:NodeJS/React/ToDoList:Data-base:React/reminder-with-data-base/src/contexts/BookContext.js"],"names":["React","createContext","useState","useEffect","uuid","BookContext","BookContextProvider","props","localData","localStorage","getItem","JSON","parse","books","setBooks","setItem","stringify","addBook","title","date","id","removeBook","filter","book","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AACA,OAAOC,IAAP,MAAiB,SAAjB;AAEA,OAAO,MAAMC,WAAW,GAAGJ,aAAa,EAAjC;;AAEP,MAAMK,mBAAmB,GAAIC,KAAD,IAAW;AACnC;AADmC,oBAETL,QAAQ,CAAC,EAAD,EAAK,MAAK;AACxC,UAAMM,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAlB;AACA,WAAOF,SAAS,GAAGG,IAAI,CAACC,KAAL,CAAWJ,SAAX,CAAH,GAA2B,EAA3C;AACH,GAHiC,CAFC;AAAA;AAAA,QAE5BK,KAF4B;AAAA,QAErBC,QAFqB,kBAOnC;;;AACAX,EAAAA,SAAS,CAAC,MAAK;AACXM,IAAAA,YAAY,CAACM,OAAb,CAAqB,OAArB,EAA8BJ,IAAI,CAACK,SAAL,CAAeH,KAAf,CAA9B;AACH,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;;AAIA,QAAMI,OAAO,GAAG,CAACC,KAAD,EAAQC,IAAR,KAAiB;AAC7BL,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAW;AAACK,MAAAA,KAAK,EAAEA,KAAR;AAAeC,MAAAA,IAAI,EAAEA,IAArB;AAA2BC,MAAAA,EAAE,EAAEhB,IAAI;AAAnC,KAAX,CAAD,CAAR;AACH,GAFD;;AAIA,QAAMiB,UAAU,GAAID,EAAD,IAAQ;AACvBN,IAAAA,QAAQ,CAACD,KAAK,CAACS,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACH,EAAL,KAAYA,EAAjC,CAAD,CAAR;AAEH,GAHD;;AAKA,SACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAI;AAACP,MAAAA,KAAD;AAAQI,MAAAA,OAAR;AAAiBI,MAAAA;AAAjB,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKd,KAAK,CAACiB,QADX,CADJ;AAKH,CA1BD;;AA4BA,eAAelB,mBAAf","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport uuid from 'uuid/v1'\n\nexport const BookContext = createContext();\n\nconst BookContextProvider = (props) => {\n    // books = original data and setBooks = to change the state or data\n    const [books, setBooks] = useState([], () =>{\n        const localData = localStorage.getItem('books');\n        return localData ? JSON.parse(localData) : [];\n    });\n\n    // store the data in local storage\n    useEffect(() =>{\n        localStorage.setItem('books', JSON.stringify(books))\n    }, [books]);\n\n    const addBook = (title, date) => {\n        setBooks([...books, {title: title, date: date, id: uuid()}]);\n    };\n\n    const removeBook = (id) => {\n        setBooks(books.filter(book => book.id !== id))\n       \n    }\n\n    return ( \n        <BookContext.Provider value = {{books, addBook, removeBook}}>\n            {props.children}\n        </BookContext.Provider>\n     );\n}\n \nexport default BookContextProvider;"]},"metadata":{},"sourceType":"module"}